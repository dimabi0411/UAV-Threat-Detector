{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimab\\\\uav-threat-detector\\\\src\\\\components\\\\ThreatInput\\\\ThreatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreatInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [speed, setSpeed] = useState('');\n  const [maxRadius, setMaxRadius] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n  useEffect(() => {\n    // Validate if all the fields are filled\n    if (latitude && longitude && speed && maxRadius) {\n      handleSubmit();\n    }\n  }, [latitude, longitude, speed, maxRadius]);\n  const handleSubmit = async () => {\n    try {\n      setSubmitting(true);\n      setSubmitError('');\n      const response = await axios.post('http://localhost:4000/threat', {\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude),\n        speed: parseFloat(speed),\n        maxRadius: parseFloat(maxRadius)\n      });\n      onSubmit(response.data);\n    } catch (error) {\n      setSubmitError('Error submitting threat details: ' + error.message);\n      console.error('Error submitting threat details:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Threat Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"latitude\",\n        children: \"Latitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"latitude\",\n        value: latitude,\n        onChange: e => setLatitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"longitude\",\n        children: \"Longitude:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"longitude\",\n        value: longitude,\n        onChange: e => setLongitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"speed\",\n        children: \"Speed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"speed\",\n        value: speed,\n        onChange: e => setSpeed(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"maxRadius\",\n        children: \"Max Radius:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"maxRadius\",\n        value: maxRadius,\n        onChange: e => setMaxRadius(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreatInput, \"VJ8I5zmgvn7JUPmaaPaoPXkVr1M=\");\n_c = ThreatInput;\nexport default ThreatInput;\nvar _c;\n$RefreshReg$(_c, \"ThreatInput\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ThreatInput","onSubmit","_s","latitude","setLatitude","longitude","setLongitude","speed","setSpeed","maxRadius","setMaxRadius","submitting","setSubmitting","submitError","setSubmitError","handleSubmit","response","post","parseFloat","data","error","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/dimab/uav-threat-detector/src/components/ThreatInput/ThreatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ThreatInput = ({ onSubmit }) => {\r\n  const [latitude, setLatitude] = useState('');\r\n  const [longitude, setLongitude] = useState('');\r\n  const [speed, setSpeed] = useState('');\r\n  const [maxRadius, setMaxRadius] = useState('');\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [submitError, setSubmitError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Validate if all the fields are filled\r\n    if (latitude && longitude && speed && maxRadius) {\r\n      handleSubmit();\r\n    }\r\n  }, [latitude, longitude, speed, maxRadius]);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setSubmitting(true);\r\n      setSubmitError('');\r\n      const response = await axios.post('http://localhost:4000/threat', {\r\n        latitude: parseFloat(latitude),\r\n        longitude: parseFloat(longitude),\r\n        speed: parseFloat(speed),\r\n        maxRadius: parseFloat(maxRadius)\r\n      });\r\n      onSubmit(response.data);\r\n    } catch (error) {\r\n      setSubmitError('Error submitting threat details: ' + error.message);\r\n      console.error('Error submitting threat details:', error);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Threat Information</h2>\r\n      <div>\r\n        <label htmlFor=\"latitude\">Latitude:</label>\r\n        <input type=\"text\" id=\"latitude\" value={latitude} onChange={(e) => setLatitude(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"longitude\">Longitude:</label>\r\n        <input type=\"text\" id=\"longitude\" value={longitude} onChange={(e) => setLongitude(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"speed\">Speed:</label>\r\n        <input type=\"text\" id=\"speed\" value={speed} onChange={(e) => setSpeed(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"maxRadius\">Max Radius:</label>\r\n        <input type=\"text\" id=\"maxRadius\" value={maxRadius} onChange={(e) => setMaxRadius(e.target.value)} />\r\n      </div>\r\n      {/*{submitError && <p>{submitError}</p>}*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreatInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}