{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dimab\\\\uav-threat-detector\\\\src\\\\components\\\\MapComponenet\\\\MapComponenet.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponenet = ({\n  threatLocation,\n  planeLocation\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const loadMapScript = () => {\n      // Create a script element\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=geometry`;\n\n      // Set the callback function name\n      script.onload = initializeMap;\n\n      // Append the script to the document body\n      document.body.appendChild(script);\n    };\n    const initializeMap = () => {\n      mapRef.current = new window.google.maps.Map(document.getElementById('map-container'), {\n        center: {\n          lat: 0,\n          lng: 0\n        },\n        zoom: 2\n      });\n      if (threatLocation) {\n        new window.google.maps.Marker({\n          position: {\n            lat: threatLocation.latitude,\n            lng: threatLocation.longitude\n          },\n          map: mapRef.current,\n          title: 'Threat Location'\n        });\n      }\n      if (planeLocation) {\n        new window.google.maps.Marker({\n          position: {\n            lat: planeLocation.latitude,\n            lng: planeLocation.longitude\n          },\n          map: mapRef.current,\n          title: 'Friendly Plane Location'\n        });\n      }\n    };\n\n    // Load the Google Maps API script dynamically\n    loadMapScript();\n  }, [threatLocation, planeLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponenet, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = MapComponenet;\nexport default MapComponenet;\nvar _c;\n$RefreshReg$(_c, \"MapComponenet\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","MapComponenet","threatLocation","planeLocation","_s","mapRef","loadMapScript","script","document","createElement","src","onload","initializeMap","body","appendChild","current","window","google","maps","Map","getElementById","center","lat","lng","zoom","Marker","position","latitude","longitude","map","title","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dimab/uav-threat-detector/src/components/MapComponenet/MapComponenet.js"],"sourcesContent":["import React, { useEffect, useRef  } from 'react'\r\n\r\nconst MapComponenet = ({ threatLocation, planeLocation }) => {\r\n  const mapRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const loadMapScript = () => {\r\n      // Create a script element\r\n      const script = document.createElement('script');\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=geometry`;\r\n\r\n      // Set the callback function name\r\n      script.onload = initializeMap;\r\n\r\n      // Append the script to the document body\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    const initializeMap = () => {\r\n      mapRef.current = new window.google.maps.Map(document.getElementById('map-container'), {\r\n        center: { lat: 0, lng: 0 },\r\n        zoom: 2\r\n      });\r\n\r\n      if (threatLocation) {\r\n        new window.google.maps.Marker({\r\n          position: { lat: threatLocation.latitude, lng: threatLocation.longitude },\r\n          map: mapRef.current,\r\n          title: 'Threat Location'\r\n        });\r\n      }\r\n\r\n      if (planeLocation) {\r\n        new window.google.maps.Marker({\r\n          position: { lat: planeLocation.latitude, lng: planeLocation.longitude },\r\n          map: mapRef.current,\r\n          title: 'Friendly Plane Location'\r\n        });\r\n      }\r\n    };\r\n\r\n    // Load the Google Maps API script dynamically\r\n    loadMapScript();\r\n  }, [threatLocation, planeLocation]);\r\n\r\n\r\n  return (\r\n    <div id=\"map-container\" style={{ width: '100%', height: '400px' }}></div>\r\n  );\r\n}\r\n\r\nexport default MapComponenet\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAS,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAGA,CAAA,KAAM;MAC1B;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAI,6EAA4E;;MAE1F;MACAH,MAAM,CAACI,MAAM,GAAGC,aAAa;;MAE7B;MACAJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IACnC,CAAC;IAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;MAC1BP,MAAM,CAACU,OAAO,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACX,QAAQ,CAACY,cAAc,CAAC,eAAe,CAAC,EAAE;QACpFC,MAAM,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE,CAAC;QAC1BC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAItB,cAAc,EAAE;QAClB,IAAIc,MAAM,CAACC,MAAM,CAACC,IAAI,CAACO,MAAM,CAAC;UAC5BC,QAAQ,EAAE;YAAEJ,GAAG,EAAEpB,cAAc,CAACyB,QAAQ;YAAEJ,GAAG,EAAErB,cAAc,CAAC0B;UAAU,CAAC;UACzEC,GAAG,EAAExB,MAAM,CAACU,OAAO;UACnBe,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MAEA,IAAI3B,aAAa,EAAE;QACjB,IAAIa,MAAM,CAACC,MAAM,CAACC,IAAI,CAACO,MAAM,CAAC;UAC5BC,QAAQ,EAAE;YAAEJ,GAAG,EAAEnB,aAAa,CAACwB,QAAQ;YAAEJ,GAAG,EAAEpB,aAAa,CAACyB;UAAU,CAAC;UACvEC,GAAG,EAAExB,MAAM,CAACU,OAAO;UACnBe,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;IACF,CAAC;;IAED;IACAxB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,cAAc,EAAEC,aAAa,CAAC,CAAC;EAGnC,oBACEH,OAAA;IAAK+B,EAAE,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE7E,CAAC;AAAAlC,EAAA,CA/CKH,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAiDnB,eAAeA,aAAa;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}